# -*- coding: utf-8 -*-
"""ZS.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bwMEfF6Q_5ZCKR6wN4N4uotfkvSrvGrC
"""

#importing important libraries
import pandas as pd
import numpy as np
import sklearn as sk
from sklearn.decomposition import PCA
from sklearn.preprocessing import scale
import matplotlib.pyplot as plt
from sklearn import preprocessing

from google.colab import files
uploaded=files.upload()

import io
gs=pd.read_csv(io.BytesIO(uploaded['data.csv']))

dl=['Unnamed: 0','location_x','location_y','team_name','date_of_game','match_id','lat/lng','type_of_shot','home/away']
gs=gs.drop(dl,axis=1)

gs=gs.reset_index(drop=True)

gs.fillna(gs.mean(),inplace=True)

#data standardizatin and splitting
from sklearn.model_selection import train_test_split
X = gs.iloc[:,:-1]
y = gs['is_goal']
Xn =scale(X)
pca=PCA(n_components=4)
Xs=pca.fit_transform(Xn)
X_train, X_test, y_train, y_test = train_test_split(Xs, y, test_size = 0.33, random_state=42)

from sklearn import  linear_model
lr = linear_model.LogisticRegression()
lr.fit(X_train, y_train)
print("Accuracy",lr.score(X_test, y_test))

#creating the confusion matrix for validation of the model
y_predicted = np.array(lr.predict(X_test))
y_prob=lr.predict_proba(X_test)[:,1]

#classification report
from sklearn.metrics import classification_report
print(classification_report(y_test,y_predicted))

output=pd.DataFrame(data=y_prob,columns=['is_goal'])
output.to_csv('Shubham_singh_090797_prediction_8.csv')

from sklearn.metrics import mean_absolute_error
mean_absolute_error(y_test,y_predicted)

